(function ()
 { function r(e, n, t) { function o(i, f) { if (!n[i]) { if (!e[i]) { var c = "function" == typeof require && require; if (!f && c) return c(i, !0); if (u) return u(i, !0); var a = new Error("Cannot find module '" + i + "'"); throw a.code = "MODULE_NOT_FOUND", a } var p = n[i] = { exports: {} }; e[i][0].call(p.exports, function (r) { var n = e[i][1][r]; return o(n || r) }, p, p.exports, r, e, n, t) } return n[i].exports } for (var u = "function" == typeof require && require, i = 0; i < t.length; i++)o(t[i]); return o } return r })()({
    1: [function (require, module, exports) {
        "use strict"; var _roulette = require("./roulette"), _util = require("./util"); function _toConsumableArray(e) { return _arrayWithoutHoles(e) || _iterableToArray(e) || _unsupportedIterableToArray(e) || _nonIterableSpread() } function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.") } function _unsupportedIterableToArray(e, t) { if (e) { if ("string" == typeof e) return _arrayLikeToArray(e, t); var r = Object.prototype.toString.call(e).slice(8, -1); return "Object" === r && e.constructor && (r = e.constructor.name), "Map" === r || "Set" === r ? Array.from(e) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? _arrayLikeToArray(e, t) : void 0 } } function _iterableToArray(e) { if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e) } function _arrayWithoutHoles(e) { if (Array.isArray(e)) return _arrayLikeToArray(e) } function _arrayLikeToArray(e, t) { (null == t || t > e.length) && (t = e.length); for (var r = 0, n = new Array(t); r < t; r++)n[r] = e[r]; return n } var Ul = document.getElementById("ul"), WeightInput = document.getElementById("weight-0"), NameInput = document.getElementById("name-0"), CurrentName = document.querySelector(".current-name"), rollBtn = document.querySelector(".roll-btn"), colors = ["#FBC22B", "#F11486", "#A067AC", "#49A3CF", "#88E444"], canvas = document.getElementById("roulette"), ctx = canvas.getContext("2d"), size = { width: canvas.width, height: canvas.height }, listId = [0], Lable = ["Roulette"], Weights = [1], PercentData = [100], Degrees = [360], PushPower = 30, deleteToList = function (e) { var t = e.target.parentElement, r = t.id.split("-")[1]; t.remove(), listId = listId.filter(function (e, t) { return e === parseInt(r) && Lable.splice(t, 1), e !== parseInt(r) }), updateData() }, addToList = function () { var e = Math.max.apply(Math, _toConsumableArray(listId)) + 1; listId.push(e); var t = document.createElement("li"); t.id = "list-".concat(e), t.className = "list"; var r = document.createElement("input"); r.id = "name-".concat(e), r.className = "input-name", r.placeholder = "음식없음", r.addEventListener("input", handleNameInput); var n = document.createElement("input"); n.id = "weight-".concat(e), n.className = "input-weight", n.type = "number", n.value = 1, n.min = 0, Weights.push(1), n.addEventListener("input", handleWeightInput); var a = document.createElement("span"); a.id = "percent-".concat(e), a.className = "percent"; var o = document.createElement("button"); o.innerText = "❌", o.className = "delete-btn", o.addEventListener("click", deleteToList), ul.appendChild(t), t.appendChild(o), t.appendChild(r), t.appendChild(n), t.appendChild(a), r.focus() }, calculatePercent = function (e) { var t = 0; Weights.map(function (e) { t += e }); var r = (100 * e / t).toFixed(2); return parseFloat(r) }, updateData = function () { var e = document.querySelectorAll(".input-weight"); Weights = _toConsumableArray(e).map(function (e) { return parseInt(e.value) || 0 }), PercentData = _toConsumableArray(e).map(function (e) { return calculatePercent(e.value) }), Degrees = PercentData.map(function (e) { return (0, _util.percentToDegree)(e) }), document.querySelectorAll(".percent").forEach(function (e, t) { e.innerHTML = "".concat(PercentData[t], "%") }), ctx.clearRect(0, 0, canvas.width, canvas.height), (0, _roulette.drawRoulette)(ctx, Degrees, size, Lable) }, handleEnterKey = function () { var e = document.querySelectorAll(".input-name"); listId = _toConsumableArray(e).map(function (e) { return parseInt(e.id.split("-")[1]) }), handleNameInput(), addToList(), updateData() }, enterForm = function (e) { "Enter" === e.key && handleEnterKey() }, handleWeightInput = function (e) { updateData() }, handleNameInput = function (e) { var t = document.querySelectorAll(".input-name"); Lable = _toConsumableArray(t).map(function (e) { return e.value }), ctx.clearRect(0, 0, canvas.width, canvas.height), (0, _roulette.drawRoulette)(ctx, Degrees, size, Lable) }; (0, _roulette.drawRoulette)(ctx, Degrees, size, Lable), Ul.addEventListener("keypress", enterForm), WeightInput.addEventListener("input", handleWeightInput), NameInput.addEventListener("input", handleNameInput); var tempRotate = 0, slowPoint = 0, rotatePower = PushPower, currentAngle = 270, clickButton = function (e) { slowPoint = 1e3 * Math.random() + 1e3, e.target.style.display = "none", rollRoulette() }, rollRoulette = function e() { if (tempRotate < slowPoint ? (tempRotate += rotatePower, currentAngle -= rotatePower) : rotatePower < 5 ? (tempRotate += rotatePower, currentAngle -= rotatePower, rotatePower -= .01) : rotatePower < 10 ? (tempRotate += rotatePower, currentAngle -= rotatePower, rotatePower -= .05) : tempRotate > slowPoint && (slowPoint = 0, tempRotate += rotatePower, currentAngle -= rotatePower, rotatePower -= .1), rotatePower < 0) return tempRotate = 0, currentAngle = 270, rotatePower = PushPower, void (rollBtn.style.display = "block"); for (ctx.clearRect(0, 0, canvas.width, canvas.height), (0, _roulette.drawRoulette)(ctx, Degrees, size, Lable, tempRotate); currentAngle < 0;)currentAngle += 360; for (; currentAngle >= 360;)currentAngle -= 360; for (var t = 0, r = 0, n = 0; n < Degrees.length; n += 1)t += Degrees[n - 1] || 0, r += Degrees[n], currentAngle > t && currentAngle < r && (CurrentName.innerText = Lable[n], CurrentName.style.color = colors[n % colors.length]); requestAnimationFrame(e) }; rollBtn.addEventListener("click", clickButton);

    }, { "./roulette": 2, "./util": 3 }], 2: [function (require, module, exports) {
        "use strict"; Object.defineProperty(exports, "__esModule", { value: !0 }), exports.drawRoulette = void 0; var _util = require("./util"), colors = ["#FBC22B", "#F11486", "#A067AC", "#49A3CF", "#88E444"], drawRoulette = function (e, t, i, l, r) { var o = "36px Sans-serif"; screen.width < 600 && (i.width = screen.width, i.height = screen.width, e.canvas.width = screen.width, e.canvas.height = screen.width, o = "7vw Sans-serif"); for (var a = 0, n = (0, _util.degreeToRadian)(r) || 0, s = i.width / 2, h = i.height / 2, d = .5 * i.width * .9, c = t.map(function (e) { return (0, _util.degreeToRadian)(e) }), u = 0; u < c.length; u += 1)a = n, n += c[u], e.beginPath(), e.fillStyle = colors[u % colors.length], e.moveTo(s, h), e.arc(s, h, d, a, n), e.lineTo(s, h), e.stroke(), e.fill(); for (var w = (0, _util.degreeToRadian)(r) || 0, f = 0; f < c.length; f += 1)e.save(), e.translate(s, h), e.rotate(w + c[f] / 2), e.moveTo(0, 0), e.font = o, e.strokeStyle = "black", e.lineWidth = 5, e.strokeText(l[f], d / 4, 8), e.fillStyle = "white", e.fillText(l[f], d / 4, 8), e.restore(), w += c[f]; e.beginPath(), e.strokeStyle = "#000000", e.lineWidth = 3, e.arc(s, h, d, 0, 2 * Math.PI), e.stroke(), e.beginPath(), e.moveTo(s, h - d + 5), e.lineTo(s - 5, h - d - 10), e.lineTo(s - 5, h - d - 15), e.lineTo(s + 5, h - d - 15), e.lineTo(s + 5, h - d - 10), e.closePath(), e.fillStyle = "black", e.fill(), e.stroke() }; exports.drawRoulette = drawRoulette;

    }, { "./util": 3 }], 3: [function (require, module, exports) {
        "use strict"; Object.defineProperty(exports, "__esModule", { value: !0 }), exports.percentToDegree = exports.degreeToRadian = void 0; var degreeToRadian = function (e) { return e * Math.PI / 180 }; exports.degreeToRadian = degreeToRadian; var percentToDegree = function (e) { var r = 360 * e / 100; return Math.round(100 * r) / 100 }; exports.percentToDegree = percentToDegree;

    }, {}]
}, {}, [1]);
